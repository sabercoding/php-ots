<?php

// autoload_psr4.php @generated by Composer

$vendorDir = dirname(dirname(__FILE__));
$baseDir = dirname($vendorDir);

return array(
    'phpDocumentor\\Reflection\\' => array($vendorDir . '/phpdocumentor/reflection-common/src', $vendorDir . '/phpdocumentor/type-resolver/src', $vendorDir . '/phpdocumentor/reflection-docblock/src'),
    'Webmozart\\Assert\\' => array($vendorDir . '/webmozart/assert/src'),
    'Symfony\\Polyfill\\Mbstring\\' => array($vendorDir . '/symfony/polyfill-mbstring'),
    'Symfony\\Polyfill\\Ctype\\' => array($vendorDir . '/symfony/polyfill-ctype'),
    'Symfony\\Component\\Yaml\\' => array($vendorDir . '/symfony/yaml'),
    'Symfony\\Component\\Stopwatch\\' => array($vendorDir . '/symfony/stopwatch'),
    'Symfony\\Component\\Filesystem\\' => array($vendorDir . '/symfony/filesystem'),
    'Symfony\\Component\\EventDispatcher\\' => array($vendorDir . '/symfony/event-dispatcher'),
    'Symfony\\Component\\Console\\' => array($vendorDir . '/symfony/console'),
    'Symfony\\Component\\Config\\' => array($vendorDir . '/symfony/config'),
    'Satooshi\\' => array($vendorDir . '/satooshi/php-coveralls/src/Satooshi'),
    'Psr\\Log\\' => array($vendorDir . '/psr/log/Psr/Log'),
    'Psr\\Http\\Message\\' => array($vendorDir . '/psr/http-message/src'),
    'GuzzleHttp\\Psr7\\' => array($vendorDir . '/guzzlehttp/psr7/src'),
    'GuzzleHttp\\Promise\\' => array($vendorDir . '/guzzlehttp/promises/src'),
    'GuzzleHttp\\' => array($vendorDir . '/guzzlehttp/guzzle/src'),
    'Google\\Protobuf\\' => array($vendorDir . '/google/protobuf/php/src/Google/Protobuf'),
    'GPBMetadata\\Google\\Protobuf\\' => array($vendorDir . '/google/protobuf/php/src/GPBMetadata/Google/Protobuf'),
    'Doctrine\\Instantiator\\' => array($vendorDir . '/doctrine/instantiator/src/Doctrine/Instantiator'),
    'DeepCopy\\' => array($vendorDir . '/myclabs/deep-copy/src/DeepCopy'),
    'Aliyun\\OTS\\Tests\\' => array($baseDir . '/src/OTS/Tests'),
    'Aliyun\\OTS\\Retry\\' => array($baseDir . '/src/OTS/Retry'),
    'Aliyun\\OTS\\ProtoBuffer\\Protocol\\' => array($baseDir . '/src/OTS/ProtoBuffer/Protocol'),
    'Aliyun\\OTS\\Handlers\\' => array($baseDir . '/src/OTS/Handlers'),
    'Aliyun\\OTS\\Consts\\' => array($baseDir . '/src/OTS/Consts'),
    'Aliyun\\OTS\\' => array($baseDir . '/src/OTS'),
);
